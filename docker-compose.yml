version: '3.8'
services:
  interbtc:
    image: "interlayhq/interbtc:interbtc-standalone-1.5.13"
    command:
      - interbtc-standalone
      - --rpc-external
      - --ws-external
      - --rpc-methods
      - Unsafe
      - --dev
    ports:
      - '9933:9933'
      - '9944:9944'
  bitcoind:
    image: 'ruimarinho/bitcoin-core:0.21'
    command:
      - -regtest
      - -server
      - -rpcbind=0.0.0.0
      - -rpcallowip=0.0.0.0/0
      - -rpcuser=rpcuser
      - -rpcpassword=rpcpassword
      - -fallbackfee=0.0002
    ports:
      - '18443:18443'
  bitcoin_cli:
    image: 'ruimarinho/bitcoin-core:0.21'
    command:
      - /bin/sh
      - -c
      - |
        bitcoin-cli -regtest -rpcconnect=bitcoind -rpcwait -rpcuser=rpcuser -rpcpassword=rpcpassword createwallet Alice
        bitcoin-cli -regtest -rpcconnect=bitcoind -rpcwait -rpcuser=rpcuser -rpcpassword=rpcpassword createwallet Bob
        bitcoin-cli -regtest -rpcconnect=bitcoind -rpcwait -rpcuser=rpcuser -rpcpassword=rpcpassword createwallet Dave
        bitcoin-cli -regtest -rpcconnect=bitcoind -rpcwait -rpcuser=rpcuser -rpcpassword=rpcpassword loadwallet Alice
        bitcoin-cli -regtest -rpcconnect=bitcoind -rpcwait -rpcuser=rpcuser -rpcpassword=rpcpassword loadwallet Bob
        bitcoin-cli -regtest -rpcconnect=bitcoind -rpcwait -rpcuser=rpcuser -rpcpassword=rpcpassword loadwallet Dave
        ALICE_ADDRESS=$$(bitcoin-cli -regtest -rpcconnect=bitcoind -rpcwait -rpcuser=rpcuser -rpcpassword=rpcpassword -rpcwallet=Alice getnewaddress)
        # coins need 100 confirmations to be spendable
        bitcoin-cli -regtest -rpcconnect=bitcoind -rpcwait -rpcuser=rpcuser -rpcpassword=rpcpassword generatetoaddress 101 $${ALICE_ADDRESS}
  electrs:
    image: 'interlayhq/electrs:latest'
    command:
      - electrs
      - -v
      - --network
      - regtest
      - --jsonrpc-import
      - --cors
      - '*'
      - --cookie
      - 'rpcuser:rpcpassword'
      - --daemon-rpc-addr
      - bitcoind:18443
      - --http-addr
      - '[::0]:3002'
      - --index-unspendables
    ports:
      - '3002:3002'
  oracle:
    image: "interlayhq/interbtc-clients:oracle-1-5-0"
    command:
      - oracle
      - --keyring
      - charlie
      - --btc-parachain-url
      - 'ws://interbtc:9944'
      - --currency-id
      - ${DOCKER_RELAY_CHAIN_CURRENCY}
      - --coingecko
      - "https://api.coingecko.com/api/v3/"
      - --blockstream
      - "https://blockstream.info/testnet/api/"
    environment:
        RUST_LOG: info
    environment:
      RUST_LOG: info
    restart: unless-stopped
  faucet:
    image: "interlayhq/interbtc-clients:faucet-1-5-0"
    command:
        - /bin/sh
        - -c
        - |
            echo '{"bob_stash": "0x1a7d114100653850c65edecda8a9b2b4dd65d900edef8e70b1a6ecdcda967056"}' > keyfile.json
            faucet --keyfile="keyfile.json" --keyname=bob_stash --btc-parachain-url 'ws://interbtc:9944' --user-allowance 1 --vault-allowance 500 --http-addr '[::0]:3035'
    environment:
      RUST_LOG: info
    ports:
      - '3035:3035'
    restart: unless-stopped
  vault:
    image: "interlayhq/interbtc-clients:vault-1-5-0"
    command:
      - /bin/sh
      - -c
      - |
          # charlie_stash
          echo '{"vault_1": "0x66256c4e2f90e273bf387923a9a7860f2e9f47a1848d6263de512f7fb110fc08"}' > keyfile.json
          echo "Sleeping..."
          # sleep for 30s to wait for bitcoin to create the Charlie wallet
          # and also to ensure that the issue period and redeem period are set
          sleep 30
          vault --keyfile="keyfile.json" --keyname="vault_1" --auto-register-with-collateral 1000000000000 --btc-parachain-url 'ws://interbtc:9944' --collateral-currency-id ${DOCKER_RELAY_CHAIN_CURRENCY} --wrapped-currency-id 'INTERBTC'
    environment: &client-env
      BITCOIN_RPC_URL: http://bitcoind:18443
      BITCOIN_RPC_USER: rpcuser
      BITCOIN_RPC_PASS: rpcpassword
      RUST_LOG: info
    restart: unless-stopped

# interbtc-index
  postgres:
    image: 'postgres:13'
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
    ports:
      - '5432:5432'
  flyway:
    image: 'flyway/flyway:7'
    command: 'migrate'
    environment:
      FLYWAY_USER: 'user'
      FLYWAY_PASSWORD: 'password'
      FLYWAY_URL: 'jdbc:postgresql://postgres:5432/postgres'
    volumes:
      - ${PWD}/node_modules/@interlay/interbtc-index-client/sql:/flyway/sql
    depends_on:
      - postgres
  index:
    image: 'registry.gitlab.com/interlay/polkabtc-stats:1.5.0'
    restart: always
    depends_on:
      - postgres
      - flyway
    command: bash -c 'while !</dev/tcp/postgres/5432; do sleep 1; done; yarn start'
    environment:
      MONITOR: '1'
      LOG_PRETTY_PRINT: '1'
      SYNC_DB_SCHEMA: '1'
      ENDPOINT_URL: 'ws://interbtc:9944'
      BTC_NETWORK: 'http://electrs:3002'
      PGHOST: 'postgres'
      PGPORT: '5432'
      PGDATABASE: 'postgres'
      PGUSER: 'user'
      PGPASSWORD: 'password'
    ports:
      - '3007:3007'

# interbtc-squid
  squid-db:
    image: postgres:12
    restart: always
    volumes:
      - /var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGPORT: 5434

  squid-indexer:
    image: subsquid/hydra-indexer:5
    restart: unless-stopped
    environment:
      - WORKERS_NUMBER=1
      - DB_NAME=indexer
      - DB_HOST=squid-db
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_PORT=5434
      - REDIS_URI=redis://redis:6379/0
      - BLOCK_HEIGHT=0
      - WS_PROVIDER_ENDPOINT_URI=ws://interbtc:9944
      - TYPES_JSON=/types.json
    volumes:
      - ./node_modules/@interlay/interbtc-index-distributable/types.json:/types.json

    depends_on:
      - squid-db
      - redis
    command: >
      sh -c "yarn db:bootstrap && yarn start:prod"

  squid-indexer-gateway:
    image: subsquid/hydra-indexer-gateway:5
    restart: unless-stopped
    depends_on:
      - redis
      - squid-db
      - squid-indexer-status-service
      - squid-indexer
    ports:
      - "4010:8080"
    environment:
      - DEV_MODE=true
      - DB_NAME=indexer
      - DB_HOST=squid-db
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_PORT=5434
      - HYDRA_INDEXER_STATUS_SERVICE=http://squid-indexer-status-service:8081/status

  squid-indexer-status-service:
    image: subsquid/hydra-indexer-status-service:5
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_URI: redis://redis:6379/0
      PORT: 8081

  redis:
    image: redis:6.0-alpine
    restart: always
    ports:
      - "6379"

  squid-processor-db:
    image: postgres:12
    restart: always
    ports:
      - 5433:5432
    volumes:
      - /var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'indexer'

  squid-processor:
    image: "interlayhq/interbtc-hydra-processor:master-2c6e16e-1637088364"
    command: yarn processor:start
    environment:
      ARCHIVE_ENDPOINT: http://squid-indexer-gateway:8080/v1/graphql
      CHAIN_ENDPOINT: ws://interbtc:9944
      BITCOIN_NETWORK: 'regtest' # For decoding BTC addresses in events
      DB_NAME: indexer
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: squid-processor-db
      DB_PORT: 5433
    restart: unless-stopped

  squid-query-node:
    image: "interlayhq/interbtc-hydra-processor:master-2c6e16e-1637088364"
    command: yarn query-node:start
    environment:
      DB_NAME: indexer
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: squid-processor-db
      DB_PORT: 5433
    restart: unless-stopped
